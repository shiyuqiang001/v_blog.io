(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{372:function(t,s,a){"use strict";a.r(s);var r=a(45),n=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),a("p",[t._v("字符串的特性不可变")]),t._v(" "),a("h2",{attrs:{id:"连接字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接字符串"}},[t._v("#")]),t._v(" 连接字符串")]),t._v(" "),a("p",[t._v("字符串使用“+”来进行字符串拼接")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class string {\n    public static void main(String[] args) {\n        String  str1 = new String("你好");\n        String  str2 = new String("java");\n        //字符串拼接\n        String str = str1+str2;\n        System.out.println(str);\n    }\n}\n\n')])])]),a("h2",{attrs:{id:"获取字符串的信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取字符串的信息"}},[t._v("#")]),t._v(" 获取字符串的信息")]),t._v(" "),a("h3",{attrs:{id:"获取字符串的长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取字符串的长度"}},[t._v("#")]),t._v(" 获取字符串的长度")]),t._v(" "),a("p",[t._v("语法：str.length()")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class string {\n    public static void main(String[] args) {\n        String  str1 = new String("你好");\n        System.out.println(str1.length());\n    }\n}\n')])])]),a("h3",{attrs:{id:"字符串查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串查找"}},[t._v("#")]),t._v(" 字符串查找")]),t._v(" "),a("p",[t._v("语法：str.indexOf( String substr)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class string {\n    public static void main(String[] args) {\n        String  str1 = new String("你好");\n        System.out.println(str1.indexOf("好"));\n    }\n}\n')])])]),a("h3",{attrs:{id:"获得索引处的字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获得索引处的字符"}},[t._v("#")]),t._v(" 获得索引处的字符")]),t._v(" "),a("p",[t._v("语法：str.charAt(int index)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class string {\n    public static void main(String[] args) {\n        String  str1 = new String("你好");\n        System.out.println(str1.charAt(1));\n    }\n}\n')])])]),a("h2",{attrs:{id:"字符串操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串操作"}},[t._v("#")]),t._v(" 字符串操作")]),t._v(" "),a("h3",{attrs:{id:"获取子字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取子字符串"}},[t._v("#")]),t._v(" 获取子字符串")]),t._v(" "),a("p",[t._v("语法：str.substring(int beginIndex) ，当然也可以加结束的索引str.substring(int beginIndex, int endIndex)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class string {\n    public static void main(String[] args) {\n        String  str1 = new String("你好,java");\n        System.out.println(str1.substring(1));\n    }\n}\n')])])]),a("h3",{attrs:{id:"去除空格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#去除空格"}},[t._v("#")]),t._v(" 去除空格")]),t._v(" "),a("p",[t._v("语法：str.trim()")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class string {\n    public static void main(String[] args) {\n        String  str1 = new String("你好,   java");\n        System.out.println("未去空格前字符串长度="+str1.lenght());\n        System.out.println("去空格后字符串长度="+str1.trim.lenght());\n    }\n}\n')])])]),a("h3",{attrs:{id:"字符串替换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串替换"}},[t._v("#")]),t._v(" 字符串替换")]),t._v(" "),a("p",[t._v("语法：str.replace(char oldChar,char newChar)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public class string {\n    public static void main(String[] args) {\n        String  str1 = new String(\"你好,   java\");\n        str1.replace('a','e')\n        System.out.println(\"替换后的字符串：\"str1);\n    }\n}\n")])])]),a("h3",{attrs:{id:"判断字符串的开始和结尾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断字符串的开始和结尾"}},[t._v("#")]),t._v(" 判断字符串的开始和结尾")]),t._v(" "),a("p",[t._v("语法：")]),t._v(" "),a("ul",[a("li",[t._v('str.startsWith("str")')]),t._v(" "),a("li",[t._v('str.endsWith("str")')])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class string {\n    public static void main(String[] args) {\n        String  str1 = new String("你好,   java");\n        System.out.println("字符串的开头是你："str1.startsWith("你"));\n        System.out.println("字符串的开头是好："str1.startsWith("好"));\n        System.out.println("字符串的开头是你："str1.endsWith("你"));\n         System.out.println("字符串的开头是a："str1.endsWith("a"));\n    }\n}\n')])])]),a("h3",{attrs:{id:"判断字符串是否相等"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断字符串是否相等"}},[t._v("#")]),t._v(" 判断字符串是否相等")]),t._v(" "),a("p",[t._v("语法 str == str1")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class string {\n    public static void main(String[] args) {\n        String  str1 = new String("你好,   java");\n        String  str2 = new String("你好,   python");\n        System.out.println("字符串str1和str2相等吗："+str1==str2);\n    }\n}\n')])])]),a("h3",{attrs:{id:"按字段顺序比较两个字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按字段顺序比较两个字符串"}},[t._v("#")]),t._v(" 按字段顺序比较两个字符串")]),t._v(" "),a("p",[t._v("语法：str.compareTo(String others)")]),t._v(" "),a("p",[t._v("按字典顺序此String对象位于参数字符串之前，比较结果为负数。此String对象位于参数字符串之后，比较结果为正数，字符串相等，结果为0")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class string {\n    public static void main(String[] args) {\n        String  str1 = new String("a");\n        String  str2 = new String("b");c\n        String  str3 = new String("c");\n        System.out.println(str1+"compareTo"+str2+":"str1.compareTo(str2));\n        System.out.println(str3+"compareTo"+str2+":"str3.compareTo(str2));\n        System.out.println(str2+"compareTo"+str2+":"str2.compareTo(str2));\n    }\n}\n')])])]),a("h3",{attrs:{id:"字母大小写转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字母大小写转换"}},[t._v("#")]),t._v(" 字母大小写转换")]),t._v(" "),a("p",[t._v("语法：")]),t._v(" "),a("ul",[a("li",[t._v("toLowerCase() :转换为小写")]),t._v(" "),a("li",[t._v("toUpperCase() :转换为大写")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class string {\n    public static void main(String[] args) {\n        String  str1 = new String("abcd");\n        String newStr = str1.toUpperCase();\n        System.out.println(newStr);\n        String newStr = str1.toLowerCase();\n        System.out.println(newStr);\n    }\n}\n')])])]),a("h3",{attrs:{id:"字符串分割"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串分割"}},[t._v("#")]),t._v(" 字符串分割")]),t._v(" "),a("p",[t._v("语法：split(String sign) :根据给定的分割符对字符串进行分割")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public class string {\n    public static void main(String[] args) {\n        String  str1 = new String(\"ab,cd\");\n        System.out.println(str1.split(','));\n    }\n}\n")])])]),a("h2",{attrs:{id:"字符串生成器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串生成器"}},[t._v("#")]),t._v(" 字符串生成器")]),t._v(" "),a("p",[t._v("可变的字符串序列StringBuilder")]),t._v(" "),a("h3",{attrs:{id:"追加"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#追加"}},[t._v("#")]),t._v(" 追加")]),t._v(" "),a("p",[t._v("方法： append()")]),t._v(" "),a("h3",{attrs:{id:"插入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插入"}},[t._v("#")]),t._v(" 插入")]),t._v(" "),a("p",[t._v("方法：insert(int offset ,arg)")]),t._v(" "),a("h3",{attrs:{id:"删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[t._v("#")]),t._v(" 删除")]),t._v(" "),a("p",[t._v("方法： delete(int start ,int end)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public class string {\n    public static void main(String[] args) {\n        StringBuffer sb =new StringBuffer("hello"); //创建字符串生成器\n        sb.append(",java");   //尾部追加\n        System.out.println(sb);\n        sb.insert(5,"?"); //第5位下标处插入\n        System.out.println(sb);\n        sb.delete(2,6);//删除2-6下标内容\n        System.out.println(sb);\n    }\n}\n')])])])])}),[],!1,null,null,null);s.default=n.exports}}]);