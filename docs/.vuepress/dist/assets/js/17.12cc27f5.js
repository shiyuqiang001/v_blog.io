(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{373:function(e,n,t){"use strict";t.r(n);var a=t(45),i=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"输入输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输入输出"}},[e._v("#")]),e._v(" 输入输出")]),e._v(" "),t("h2",{attrs:{id:"创建删除文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建删除文件"}},[e._v("#")]),e._v(" 创建删除文件")]),e._v(" "),t("h3",{attrs:{id:"常用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用方法"}},[e._v("#")]),e._v(" 常用方法：")]),e._v(" "),t("ul",[t("li",[e._v("File（String Pathname）")]),e._v(" "),t("li",[e._v("File（String parent ， String child）")]),e._v(" "),t("li",[e._v("File（File f  ，String child）")]),e._v(" "),t("li",[e._v("file .exists() ：查询文件是否存在")]),e._v(" "),t("li",[e._v("file .delete() : 删除文件")]),e._v(" "),t("li",[e._v("file .createNewFile() :创建新文件")])]),e._v(" "),t("h3",{attrs:{id:"例子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[e._v("#")]),e._v(" 例子")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('public class Creat_File {\n    public static void main(String[] args) {\n       File file = new File("D:/Java脚本/src/io_home","1.txt");\n       if (file.exists()){\n           file.delete();\n           System.out.println("删除已存在的文件");\n       }else{\n           try {\n               file.createNewFile();\n               System.out.println("文件创建成功");\n           } catch (IOException e) {\n               e.printStackTrace();\n           }\n       }\n    }\n\n}\n')])])]),t("h2",{attrs:{id:"获取文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取文件"}},[e._v("#")]),e._v(" 获取文件")]),e._v(" "),t("h3",{attrs:{id:"常用方法-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用方法-2"}},[e._v("#")]),e._v(" 常用方法")]),e._v(" "),t("ul",[t("li",[e._v("getName()")]),e._v(" "),t("li",[e._v("canRead()")]),e._v(" "),t("li",[e._v("canWrite()")]),e._v(" "),t("li",[e._v("exits()")]),e._v(" "),t("li",[e._v("length()")]),e._v(" "),t("li",[e._v("getAbsolutePath()")]),e._v(" "),t("li",[e._v("getParent()")]),e._v(" "),t("li",[e._v("isFile()")]),e._v(" "),t("li",[e._v("isDirectory()")]),e._v(" "),t("li",[e._v("isHidden()")]),e._v(" "),t("li",[e._v("lastModified()")])]),e._v(" "),t("h3",{attrs:{id:"例子-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#例子-2"}},[e._v("#")]),e._v(" 例子")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('public class Get_File {\n   public static void main(String[] args) {\n       File file = new File("D:/Java脚本/src/io_home/1.txt"); //实例文件对象\n       if (file.exists()){   //判断文件是不是存在\n           String name = file.getName();   // 获取文件名称\n           long length = file.length(); //获取文件长度\n           boolean hidden = file.isHidden(); //判断文件是否隐藏\n           boolean canRead = file.canRead();  //判断是否可读\n           System.out.println("查询的文件名称："+name+"，\\n文件的长度是："+length+"，\\n文件的隐藏属性是："+hidden+"，\\n文件的可读属性是："+canRead);\n           System.out.println("******其他方法可以按同样的操作测试******");\n       }else {\n           System.out.println("文件不存在！");\n       }\n   }\n}\n')])])]),t("h3",{attrs:{id:"小实战"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小实战"}},[e._v("#")]),e._v(" 小实战")]),e._v(" "),t("p",[e._v("实现通过界面编辑，写入文件，点击按钮获取文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('import javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.FileWriter;\n\npublic class FileReader_or_Writer extends JFrame {\n    private static  final long seriaVersionUID=1L;\n    private  JPanel jCPanel =null; //创建面板对象\n    private  JTextArea jTextArea = null; //创建文本域对象\n    private  JPanel CPanel =null; //创建面板对象\n    private  JButton openButton = null ;\n    private  JButton stopButton = null;\n\n    //FileReader_or_Writer构造方法\n    protected FileReader_or_Writer(){\n        super();\n        init();\n\n\n    }\n\n    //初始化数据\n    private void init() {\n        this.setSize(300,600);\n        this.setContentPane(getjCPanel());\n        this.setTitle("JFrame");\n    }\n    //写入文件按钮+事件\n    private  JButton getOpenButton(){\n        if (openButton==null){\n            openButton =new JButton();\n            openButton.setText("写入文件");\n            openButton.addActionListener(new ActionListener() {\n                @Override\n                public void actionPerformed(ActionEvent e) {\n                    File file = new File("word.txt");\n                    try {\n                        FileWriter out = new FileWriter(file);\n                        String s = jTextArea.getText();\n                        out.write(s);\n                        out.close();\n\n                    }catch (Exception e1){\n                        e1.printStackTrace();\n                    }\n                }\n            });\n\n        }\n\n        return openButton;\n    }\n    //读取文件按钮+事件\n    private  JButton getStopButton(){\n        if (stopButton==null){\n            stopButton =new JButton();\n            stopButton.setText("读取文件");\n            stopButton.addActionListener(new ActionListener() {\n                @Override\n                public void actionPerformed(ActionEvent e) {\n                    File file = new File("word.txt");\n                    try {\n                        FileReader in = new FileReader(file);\n                        char byt[] = new char[1024];\n                        int len =in.read(byt);\n                        jTextArea.setText(new String(byt,0,len));\n                        in.close();\n\n                    }catch (Exception e1){\n                        //在抛异常的时候界面弹出提示框\n                        class MyJDialog extends JDialog{\n                           public  MyJDialog (Frame frame){\n                               super(frame,"友情提示",true);\n                               Container container = getContentPane();\n                               container.add(new JLabel("系统库为空请先写入文件！"));\n                               this.setBounds(30,30,200,80);\n                           }\n                        }\n                        class MyFrame extends JFrame{\n                            public MyFrame(){\n                                Container container = new Container();\n                                container.setLayout(null);\n                                JLabel jLabel =new JLabel("提示：");\n                                jLabel.setHorizontalAlignment(SwingConstants.CENTER);\n                                container.add(jLabel);\n                                new MyJDialog(MyFrame.this).setVisible(true);\n                            }\n                        }\n                        new MyFrame();\n                        System.out.println("系统库为空请先写入文件！");\n                        e1.printStackTrace();\n\n                    }\n                }\n            });\n\n        }\n\n        return stopButton;\n    }\n    //主面板控件\n    private  JPanel getjCPanel(){\n        if(jCPanel==null){\n            jCPanel =new JPanel();\n            jCPanel.setLayout(new BorderLayout());\n            jCPanel.add(getJTextArea(),BorderLayout.CENTER);\n            jCPanel.add(getCPanel(),BorderLayout.SOUTH);\n\n        }\n        return jCPanel;\n    }\n    //子面板控件\n    private JPanel getCPanel() {\n        CPanel = new JPanel();\n        CPanel.add(getOpenButton());\n        CPanel.add(getStopButton());\n        return CPanel;\n    }\n    //子面板输入框\n    private JTextArea getJTextArea() {\n        jTextArea = new JTextArea(10,20);\n\n        return jTextArea;\n    }\n    //主方法\n    public static void main(String[] args) {\n        FileReader_or_Writer o = new FileReader_or_Writer();\n        o.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        o.setVisible(true);\n    }\n\n}\n\n')])])]),t("h2",{attrs:{id:"流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#流"}},[e._v("#")]),e._v(" 流")]),e._v(" "),t("p",[e._v("文件的输入输出流,用来操作磁盘文件。适用于读取需求比较简单的场景")]),e._v(" "),t("ul",[t("li",[e._v("输入流：FileInputStream 继承于InputStream 类 ,传输的字节流")]),e._v(" "),t("li",[e._v("常用的构造方法：")]),e._v(" "),t("li",[e._v("FileInputStream（String name）")]),e._v(" "),t("li",[e._v("FileInputStream (File file)")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('public class FileInput_or_OutputStream {\n   public FileInput_or_OutputStream(File file) {\n   }\n\n   public static void main(String[] args) {\n       File file = new File("D:/Java脚本/src/io_home/1.txt"); //实例文件对象\n\n       //将字节流写入文件\n       try {\n           FileOutputStream fileOutputStream = new FileOutputStream(file); //创建FileInputStream对象\n           byte[] bytes = "你偷走了他的心，怎么还能留下".getBytes();\n           fileOutputStream.write(bytes);\n           fileOutputStream.close();\n       } catch (FileNotFoundException e) {  //文件未找到类型异常\n           e.printStackTrace();\n       } catch (IOException e) { //IO流类型异常\n           e.printStackTrace();\n       }\n\n       //将字节流从文件写出\n       try {\n           FileInputStream fileIntputStream = new FileInputStream(file); //创建FileInputStream对象\n           byte[] bytes = new byte[1024] ; //创建bytes数组\n           int len = fileIntputStream.read(bytes);\n           //将文件中的信息输出\n           System.out.println("文件中的信息是："+ new String(bytes,0,len));\n           fileIntputStream.close();  //关闭流\n\n       } catch (Exception e) {\n\n       }\n\n\n   }\n\n}\n')])])])])}),[],!1,null,null,null);n.default=i.exports}}]);